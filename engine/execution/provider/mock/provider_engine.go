// Code generated by mockery v1.0.0. DO NOT EDIT.

package mock

import flow "github.com/dapperlabs/flow-go/model/flow"
import mock "github.com/stretchr/testify/mock"

// ProviderEngine is an autogenerated mock type for the ProviderEngine type
type ProviderEngine struct {
	mock.Mock
}

// BroadcastExecutionReceipt provides a mock function with given fields: _a0
func (_m *ProviderEngine) BroadcastExecutionReceipt(_a0 *flow.ExecutionReceipt) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*flow.ExecutionReceipt) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Process provides a mock function with given fields: originID, event
func (_m *ProviderEngine) Process(originID flow.Identifier, event interface{}) error {
	ret := _m.Called(originID, event)

	var r0 error
	if rf, ok := ret.Get(0).(func(flow.Identifier, interface{}) error); ok {
		r0 = rf(originID, event)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ProcessLocal provides a mock function with given fields: event
func (_m *ProviderEngine) ProcessLocal(event interface{}) error {
	ret := _m.Called(event)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(event)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Submit provides a mock function with given fields: originID, event
func (_m *ProviderEngine) Submit(originID flow.Identifier, event interface{}) {
	_m.Called(originID, event)
}

// SubmitLocal provides a mock function with given fields: event
func (_m *ProviderEngine) SubmitLocal(event interface{}) {
	_m.Called(event)
}
