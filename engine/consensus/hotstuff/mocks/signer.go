// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import hotstuff "github.com/dapperlabs/flow-go/model/hotstuff"
import mock "github.com/stretchr/testify/mock"

// Signer is an autogenerated mock type for the Signer type
type Signer struct {
	mock.Mock
}

// Propose provides a mock function with given fields: block
func (_m *Signer) Propose(block *hotstuff.Block) (*hotstuff.Proposal, error) {
	ret := _m.Called(block)

	var r0 *hotstuff.Proposal
	if rf, ok := ret.Get(0).(func(*hotstuff.Block) *hotstuff.Proposal); ok {
		r0 = rf(block)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*hotstuff.Proposal)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*hotstuff.Block) error); ok {
		r1 = rf(block)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// VoteFor provides a mock function with given fields: block
func (_m *Signer) VoteFor(block *hotstuff.Block) (*hotstuff.Vote, error) {
	ret := _m.Called(block)

	var r0 *hotstuff.Vote
	if rf, ok := ret.Get(0).(func(*hotstuff.Block) *hotstuff.Vote); ok {
		r0 = rf(block)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*hotstuff.Vote)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*hotstuff.Block) error); ok {
		r1 = rf(block)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
