// Code generated by capnpc-go. DO NOT EDIT.

package captain

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type Identity struct{ capnp.Struct }

// Identity_TypeID is the unique identifier for the type Identity.
const Identity_TypeID = 0x87bef45c1dc996c0

func NewIdentity(s *capnp.Segment) (Identity, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Identity{st}, err
}

func NewRootIdentity(s *capnp.Segment) (Identity, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Identity{st}, err
}

func ReadRootIdentity(msg *capnp.Message) (Identity, error) {
	root, err := msg.RootPtr()
	return Identity{root.Struct()}, err
}

func (s Identity) String() string {
	str, _ := text.Marshal(0x87bef45c1dc996c0, s.Struct)
	return str
}

func (s Identity) NodeId() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Identity) HasNodeId() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Identity) SetNodeId(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s Identity) Address() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Identity) HasAddress() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Identity) AddressBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Identity) SetAddress(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Identity) Role() uint8 {
	return s.Struct.Uint8(0)
}

func (s Identity) SetRole(v uint8) {
	s.Struct.SetUint8(0, v)
}

func (s Identity) Stake() uint64 {
	return s.Struct.Uint64(8)
}

func (s Identity) SetStake(v uint64) {
	s.Struct.SetUint64(8, v)
}

// Identity_List is a list of Identity.
type Identity_List struct{ capnp.List }

// NewIdentity creates a new list of Identity.
func NewIdentity_List(s *capnp.Segment, sz int32) (Identity_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2}, sz)
	return Identity_List{l}, err
}

func (s Identity_List) At(i int) Identity { return Identity{s.List.Struct(i)} }

func (s Identity_List) Set(i int, v Identity) error { return s.List.SetStruct(i, v.Struct) }

func (s Identity_List) String() string {
	str, _ := text.MarshalList(0x87bef45c1dc996c0, s.List)
	return str
}

// Identity_Promise is a wrapper for a Identity promised by a client call.
type Identity_Promise struct{ *capnp.Pipeline }

func (p Identity_Promise) Struct() (Identity, error) {
	s, err := p.Pipeline.Struct()
	return Identity{s}, err
}

type Header struct{ capnp.Struct }

// Header_TypeID is the unique identifier for the type Header.
const Header_TypeID = 0xde11024ca833d34a

func NewHeader(s *capnp.Segment) (Header, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 3})
	return Header{st}, err
}

func NewRootHeader(s *capnp.Segment) (Header, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 3})
	return Header{st}, err
}

func ReadRootHeader(msg *capnp.Message) (Header, error) {
	root, err := msg.RootPtr()
	return Header{root.Struct()}, err
}

func (s Header) String() string {
	str, _ := text.Marshal(0xde11024ca833d34a, s.Struct)
	return str
}

func (s Header) Number() uint64 {
	return s.Struct.Uint64(0)
}

func (s Header) SetNumber(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s Header) Timestamp() uint64 {
	return s.Struct.Uint64(8)
}

func (s Header) SetTimestamp(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s Header) Parent() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Header) HasParent() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Header) SetParent(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s Header) Payload() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s Header) HasPayload() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Header) SetPayload(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s Header) Signatures() (capnp.DataList, error) {
	p, err := s.Struct.Ptr(2)
	return capnp.DataList{List: p.List()}, err
}

func (s Header) HasSignatures() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Header) SetSignatures(v capnp.DataList) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewSignatures sets the signatures field to a newly
// allocated capnp.DataList, preferring placement in s's segment.
func (s Header) NewSignatures(n int32) (capnp.DataList, error) {
	l, err := capnp.NewDataList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.DataList{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

// Header_List is a list of Header.
type Header_List struct{ capnp.List }

// NewHeader creates a new list of Header.
func NewHeader_List(s *capnp.Segment, sz int32) (Header_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 3}, sz)
	return Header_List{l}, err
}

func (s Header_List) At(i int) Header { return Header{s.List.Struct(i)} }

func (s Header_List) Set(i int, v Header) error { return s.List.SetStruct(i, v.Struct) }

func (s Header_List) String() string {
	str, _ := text.MarshalList(0xde11024ca833d34a, s.List)
	return str
}

// Header_Promise is a wrapper for a Header promised by a client call.
type Header_Promise struct{ *capnp.Pipeline }

func (p Header_Promise) Struct() (Header, error) {
	s, err := p.Pipeline.Struct()
	return Header{s}, err
}

type Block struct{ capnp.Struct }

// Block_TypeID is the unique identifier for the type Block.
const Block_TypeID = 0xb21c60ff9d83fbf5

func NewBlock(s *capnp.Segment) (Block, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Block{st}, err
}

func NewRootBlock(s *capnp.Segment) (Block, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Block{st}, err
}

func ReadRootBlock(msg *capnp.Message) (Block, error) {
	root, err := msg.RootPtr()
	return Block{root.Struct()}, err
}

func (s Block) String() string {
	str, _ := text.Marshal(0xb21c60ff9d83fbf5, s.Struct)
	return str
}

func (s Block) Header() (Header, error) {
	p, err := s.Struct.Ptr(0)
	return Header{Struct: p.Struct()}, err
}

func (s Block) HasHeader() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Block) SetHeader(v Header) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewHeader sets the header field to a newly
// allocated Header struct, preferring placement in s's segment.
func (s Block) NewHeader() (Header, error) {
	ss, err := NewHeader(s.Struct.Segment())
	if err != nil {
		return Header{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Block) NewIdentities() (Identity_List, error) {
	p, err := s.Struct.Ptr(1)
	return Identity_List{List: p.List()}, err
}

func (s Block) HasNewIdentities() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Block) SetNewIdentities(v Identity_List) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewNewIdentities sets the newIdentities field to a newly
// allocated Identity_List, preferring placement in s's segment.
func (s Block) NewNewIdentities(n int32) (Identity_List, error) {
	l, err := NewIdentity_List(s.Struct.Segment(), n)
	if err != nil {
		return Identity_List{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s Block) CollectionGuarantees() (CollectionGuarantee_List, error) {
	p, err := s.Struct.Ptr(2)
	return CollectionGuarantee_List{List: p.List()}, err
}

func (s Block) HasCollectionGuarantees() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Block) SetCollectionGuarantees(v CollectionGuarantee_List) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewCollectionGuarantees sets the collectionGuarantees field to a newly
// allocated CollectionGuarantee_List, preferring placement in s's segment.
func (s Block) NewCollectionGuarantees(n int32) (CollectionGuarantee_List, error) {
	l, err := NewCollectionGuarantee_List(s.Struct.Segment(), n)
	if err != nil {
		return CollectionGuarantee_List{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

// Block_List is a list of Block.
type Block_List struct{ capnp.List }

// NewBlock creates a new list of Block.
func NewBlock_List(s *capnp.Segment, sz int32) (Block_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return Block_List{l}, err
}

func (s Block_List) At(i int) Block { return Block{s.List.Struct(i)} }

func (s Block_List) Set(i int, v Block) error { return s.List.SetStruct(i, v.Struct) }

func (s Block_List) String() string {
	str, _ := text.MarshalList(0xb21c60ff9d83fbf5, s.List)
	return str
}

// Block_Promise is a wrapper for a Block promised by a client call.
type Block_Promise struct{ *capnp.Pipeline }

func (p Block_Promise) Struct() (Block, error) {
	s, err := p.Pipeline.Struct()
	return Block{s}, err
}

func (p Block_Promise) Header() Header_Promise {
	return Header_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

const schema_cf3ad8085685b22d = "x\xda|\x91\xbfk\x14A\x1c\xc5\xdf\x9b\xd9K\x8c\xe4" +
	"\xc7-wUP\xae\xb2\x114j\xba4\x09\x011\x91" +
	"\x14\x19\x0b\x11\x89\x90\xf1v\xf4\x96\xec/v\xe7\x88)" +
	"\xc4\x88\x11\x15\x14\x12\xf0\x07\x82\xe9E\x041\xbd\xa2\x85" +
	"\x85U@\x1b+K\xfd\x07\xb4\xd1be\x8e\xe4\xee\xb0" +
	"H\xb7|\xf71|\xde\xfb\x9c\xda\xe5\x8c8]y6" +
	"\x08\xa8K\x95\x81\xf2\xc3\xd3\xcfG\x97~\xbd\xbf\x075" +
	"NQ\x9e\xd8\xb9{\xf1\xd0\xb7\xa9]T\xc4 0\xf9" +
	"V\x8e\xb3\xf6Q\x0e\x02\xb5w\xf2'X\xfe\xfe{g" +
	"\xbb\\>\xb2\x03\x7f\x9c}a\x97\x98\xdc\xf2\x04k\xdb" +
	"\x9e\x0b?\xf7\xde\x80\xe5\xf9\xaf\x93/\x17\x84\xff\xfd\xff" +
	"\xa7;\xe9+\x95\xc3\xac\xc5\x15\xf7\x19V\x1a\xc4\x97\xb2" +
	"h\xb6L\xac'\x9aRgV\x87\xc9\xc4\xb5(]=" +
	"\xd9\xd4Y\x92M\xcd\x07&\xb1\xa1\xb4k\x8b\xa4\xaaJ" +
	"\x0f\xf0\x08\xf8z\x0aPK\x92\xaa%\xe8\x93u\xba\xa3" +
	"\x99\x05\xd4\xb2\xa4\x8a\x04)\xea\x14\x80\x1f\x1e\x07T " +
	"\xa92A_\xb2N\x09\xf8\xf1\x19@\xb5$\x95\x15\x9c" +
	"N\xd2\xc0\xcc\x07\x1c\x81\xe0\x08xK\x07An\x8a\x82" +
	"\xc3\x10\x1c\x06\xc7\xf242\x1c\x80\xe0\x00\xd8(\xac^" +
	"1\x1c\x82\xe0\x10x\x10\xf6l\x946W\xe0\x98\x87\xbb" +
	"\xccg\x1d\xf3\x8c\xa4Z\xe8c\x9e\xcf\x015'\xa9\x02" +
	"A_\xecA\xebW{\xd0\xeb\x82\xd3-\xa3\x03\x93\xb3" +
	"\xda\x1b\x15d\x15,\x13\xb3\xdaY\x07\x8d\xd0\x86\xa6\xe0" +
	"(\xb8(\xc9jO,\xe8\x8ee3\x8d\"\xd3\xb4!" +
	"\xd3\xe4\\[\xe7:\x19\xb3\xa6?\x7f\xec\xc9\x8f?+" +
	"\x8d\x17\x9f\xf6\xf3\x07\xf4\x9a\xeb\xc0\xa0\xd3\xac\xdemv" +
	"\xd35\xbb!\xa96\xfa\x9a\xdd\xbe\x00\xa8uI\xf5\xb0" +
	"g\xe3\x81\x0bnH\xaa\xcd>\x1b\x8f\x9c\xb6\xfb\x92\xea" +
	"\xb1\xa0\xef\x89:=\xc0\xdf\xba\x0c\xa8MI\xf5\xda)" +
	"j\xc7WM\xde\xdd\xdd\x86\xb1)\xac\x8e\xc1l\xff6" +
	"\x9d\xe9\xdc$\xb6k1\xd3kQ\xaa\xbbV\xcb\"\xbc" +
	"\x9eh\xdb\xce!{\xc5\xdd\xbfQ\xf0_\x00\x00\x00\xff" +
	"\xff\xd4\"\xb4\xf5"

func init() {
	schemas.Register(schema_cf3ad8085685b22d,
		0x87bef45c1dc996c0,
		0xb21c60ff9d83fbf5,
		0xde11024ca833d34a)
}
