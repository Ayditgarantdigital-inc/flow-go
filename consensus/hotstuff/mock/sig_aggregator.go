// Code generated by mockery v1.0.0. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"
import model "github.com/dapperlabs/flow-go/consensus/hotstuff/model"

// SigAggregator is an autogenerated mock type for the SigAggregator type
type SigAggregator struct {
	mock.Mock
}

// Aggregate provides a mock function with given fields: block, sigs
func (_m *SigAggregator) Aggregate(block *model.Block, sigs []*model.SingleSignature) (*model.AggregatedSignature, error) {
	ret := _m.Called(block, sigs)

	var r0 *model.AggregatedSignature
	if rf, ok := ret.Get(0).(func(*model.Block, []*model.SingleSignature) *model.AggregatedSignature); ok {
		r0 = rf(block, sigs)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.AggregatedSignature)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*model.Block, []*model.SingleSignature) error); ok {
		r1 = rf(block, sigs)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CanReconstruct provides a mock function with given fields: numOfSigShares
func (_m *SigAggregator) CanReconstruct(numOfSigShares int) bool {
	ret := _m.Called(numOfSigShares)

	var r0 bool
	if rf, ok := ret.Get(0).(func(int) bool); ok {
		r0 = rf(numOfSigShares)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
