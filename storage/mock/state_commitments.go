// Code generated by mockery v1.0.0. DO NOT EDIT.

package mock

import flow "github.com/dapperlabs/flow-go/model/flow"
import mock "github.com/stretchr/testify/mock"

// StateCommitments is an autogenerated mock type for the StateCommitments type
type StateCommitments struct {
	mock.Mock
}

// ByID provides a mock function with given fields: id
func (_m *StateCommitments) ByID(id flow.Identifier) (*[]byte, error) {
	ret := _m.Called(id)

	var r0 *[]byte
	if rf, ok := ret.Get(0).(func(flow.Identifier) *[]byte); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(flow.Identifier) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Persist provides a mock function with given fields: id, stateCommitment
func (_m *StateCommitments) Persist(id flow.Identifier, stateCommitment *[]byte) error {
	ret := _m.Called(id, stateCommitment)

	var r0 error
	if rf, ok := ret.Get(0).(func(flow.Identifier, *[]byte) error); ok {
		r0 = rf(id, stateCommitment)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
