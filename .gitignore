/cmd/flow/flow
/cmd/collection/collection
/cmd/consensus/consensus
/cmd/execution/execution
/cmd/verification/verification
/cmd/testclient/testclient
/cmd/util/util

# Test binary, build with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Output from logging to debug
*.log

# Coverage artifacts
coverage.zip
cover.json
cover-summary
index.html

# Since we have tooling that uses node
node_modules

.DS_Store

flow.json
flowdb

# IDE related files
.idea
.vscode
*.code-workspace
git
language/tools/vscode-extension/cadence-*.vsix
language/tools/vscode-extension/out/*


# Go mod ignores
.history

# Mock generation
**/gomock_reflect*/*


cmd/util/cmd/replay-transactions/data/**
cmd/util/cmd/replay-transactions/data4/**
cmd/util/cmd/replay-transactions/data_first/**
cmd/util/cmd/replay-transactions/blocks/**
cmd/util/cmd/replay-transactions/block-ids/**

blocks/**
cmd/util/cmd/replay-transactions/failed-txs/**
cmd/util/cmd/replay-transactions/complete-data1/**
cmd/util/cmd/replay-transactions/complete-data4/**
cmd/util/cmd/replay-transactions/complete-data5/**
cmd/util/cmd/replay-transactions/data1/**
cmd/util/cmd/replay-transactions/data5/**
cmd/util/cmd/replay-transactions/data6/**
cmd/util/cmd/replay-transactions/data7/**
